{"ast":null,"code":"var _jsxFileName = \"/Users/ju/Desktop/vitaminApp/src/App.js\";\n// DEPENDENCIES\nimport React, { Component } from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // MY FILES\n\nimport Vitamins from './Components/MyPortfolio/MyPortfolio';\nimport Menu from './Components/Menu/Menu';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      vitamins: [],\n      total: 0,\n      userInputs: [],\n      currentInput: \"\"\n    };\n\n    this.getInputValue = event => {\n      const inputTotal = event.target.value;\n      console.log(inputTotal);\n      this.setState({\n        currentInput: inputTotal\n      });\n    };\n\n    this.submitBtn = () => {\n      // if user does not input anything, alert them\n      if (this.state.currentInput.length === 0) {\n        console.log('EMPTY INPUT');\n        alert(\" ENTER SOMETHING, YOU FOOL! \");\n        return;\n      } // if user enters something that is not a number, alert them\n\n\n      if (!Number.isInteger(parseInt(this.state.currentInput))) {\n        alert(\"INVALID INPUT, YOU IMBECILE. NUMBERS ONLYS\");\n        console.log('GIVE ME A NUMBER');\n        return;\n      }\n\n      var newArray = [];\n      var total = 0;\n      newArray.push(parseInt(this.state.currentInput));\n      this.setState({\n        currentInput: \"\",\n        userInputs: newArray\n      });\n\n      for (let i = 0; i < newArray.length; i++) {\n        total += parseInt(newArray[i]);\n        console.log(total);\n      }\n\n      this.setState({\n        total: total\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Vitamins, {\n      submitBtn: this.submitBtn,\n      getInputValue: this.getInputValue,\n      total: this.state.total,\n      currentInput: this.state.currentInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ju/Desktop/vitaminApp/src/App.js"],"names":["React","Component","Vitamins","Menu","App","state","vitamins","total","userInputs","currentInput","getInputValue","event","inputTotal","target","value","console","log","setState","submitBtn","length","alert","Number","isInteger","parseInt","newArray","push","i","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAO,sCAAP,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAG,EADL;AAENC,MAAAA,KAAK,EAAG,CAFF;AAGNC,MAAAA,UAAU,EAAC,EAHL;AAINC,MAAAA,YAAY,EAAC;AAJP,KADkB;;AAAA,SAQ1BC,aAR0B,GAQTC,KAAD,IAAW;AACzB,YAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAhC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAEA,WAAKK,QAAL,CAAc;AACZR,QAAAA,YAAY,EAAEG;AADF,OAAd;AAGD,KAfyB;;AAAA,SAiB1BM,SAjB0B,GAiBd,MAAM;AAClB;AACE,UAAI,KAAKb,KAAL,CAAWI,YAAX,CAAwBU,MAAxB,KAAmC,CAAvC,EAA0C;AACxCJ,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAI,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACA;AACD,OANe,CAOlB;;;AACE,UAAI,CAACC,MAAM,CAACC,SAAP,CAAiBC,QAAQ,CAAC,KAAKlB,KAAL,CAAWI,YAAZ,CAAzB,CAAL,EAA0D;AACxDW,QAAAA,KAAK,CAAC,4CAAD,CAAL;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;AACD;;AAEH,UAAIQ,QAAQ,GAAG,EAAf;AACA,UAAIjB,KAAK,GAAG,CAAZ;AAEAiB,MAAAA,QAAQ,CAACC,IAAT,CAAcF,QAAQ,CAAC,KAAKlB,KAAL,CAAWI,YAAZ,CAAtB;AACA,WAAKQ,QAAL,CAAc;AACZR,QAAAA,YAAY,EAAC,EADD;AAEZD,QAAAA,UAAU,EAACgB;AAFC,OAAd;;AAKA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACL,MAA7B,EAAqCO,CAAC,EAAtC,EAA0C;AACxCnB,QAAAA,KAAK,IAAIgB,QAAQ,CAACC,QAAQ,CAACE,CAAD,CAAT,CAAjB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD;;AAED,WAAKU,QAAL,CAAc;AACZV,QAAAA,KAAK,EAAGA;AADI,OAAd;AAGD,KAhD2B;AAAA;;AAkD1BoB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,QAAD;AACE,MAAA,SAAS,EAAI,KAAKT,SADpB;AAEE,MAAA,aAAa,EAAG,KAAKR,aAFvB;AAGE,MAAA,KAAK,EAAI,KAAKL,KAAL,CAAWE,KAHtB;AAIE,MAAA,YAAY,EAAI,KAAKF,KAAL,CAAWI,YAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADF;AAYD;;AA/DyB;;AAiE5B,eAAeL,GAAf","sourcesContent":["// DEPENDENCIES\nimport React, { Component } from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// MY FILES\nimport Vitamins from './Components/MyPortfolio/MyPortfolio';\nimport Menu from './Components/Menu/Menu';\n\nclass App extends Component {\n  state = {\n    vitamins : [],\n    total : 0,\n    userInputs:[],\n    currentInput:\"\"\n  }\n\n  getInputValue = (event) => {\n    const inputTotal = event.target.value\n    console.log(inputTotal)\n\n    this.setState({\n      currentInput: inputTotal\n    })\n  }\n\n  submitBtn = () => { \n  // if user does not input anything, alert them\n    if (this.state.currentInput.length === 0) {\n      console.log('EMPTY INPUT');\n      alert(\" ENTER SOMETHING, YOU FOOL! \")\n      return;\n    }\n  // if user enters something that is not a number, alert them\n    if (!Number.isInteger(parseInt(this.state.currentInput))) {\n      alert(\"INVALID INPUT, YOU IMBECILE. NUMBERS ONLYS\")\n      console.log('GIVE ME A NUMBER');\n      return;\n    }\n\n  var newArray = [];\n  var total = 0;\n  \n  newArray.push(parseInt(this.state.currentInput));\n  this.setState({\n    currentInput:\"\",\n    userInputs:newArray\n  });\n\n  for (let i = 0; i < newArray.length; i++) {\n    total += parseInt(newArray[i]);      \n    console.log(total);\n  }\n\n  this.setState({\n    total : total\n  }) \n}\n\n  render() {\n    return (\n      <div>\n      <Menu />\n      <br></br>\n      <Vitamins \n        submitBtn = {this.submitBtn}\n        getInputValue ={this.getInputValue}\n        total = {this.state.total}\n        currentInput = {this.state.currentInput}\n      />\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}