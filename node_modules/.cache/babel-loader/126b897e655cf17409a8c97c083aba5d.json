{"ast":null,"code":"var _jsxFileName = \"/Users/ju/Desktop/vitaminApp/src/App.js\";\n// DEPENDENCIES\nimport React, { Component } from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // MY FILES\n\nimport Vitamins from './Components/MyPortfolio/MyPortfolio';\nimport Menu from './Components/Menu/Menu';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      vitaminCTotal: 0,\n      vitaminDTotal: 0,\n      vitaminETotal: 0,\n      userInputs: [],\n      currentInput: \"\",\n      vitaminDInput: \"\"\n    };\n\n    this.getInputValue = event => {\n      const inputTotal = event.target.value;\n      const vitaminDTotal = event.target.value;\n      console.log(inputTotal);\n      this.setState({\n        currentInput: inputTotal //vitaminDTotal: vitaminDTotal\n\n      });\n    };\n\n    this.submitBtn = () => {\n      // if user does not input anything, alert them\n      if (this.state.currentInput.length === 0) {\n        alert(\" ENTER SOMETHING, YOU FOOL! \");\n        return;\n      } // if user enters something that is not a number, alert them\n\n\n      if (!Number.isInteger(parseInt(this.state.currentInput))) {\n        alert(\"INVALID INPUT, YOU IMBECILE. NUMBERS ONLYS\");\n        return;\n      }\n\n      var newArray = this.state.userInputs;\n      var varTotal = 0;\n      newArray.push(parseInt(this.state.currentInput));\n      this.setState({\n        currentInput: \"\",\n        vitaminDInput: \"\",\n        userInputs: newArray\n      });\n\n      for (let i = 0; i < newArray.length; i++) {\n        varTotal += parseInt(newArray[i]);\n      }\n\n      if (varTotal > 2000) {\n        alert(\"waNnA DiE?\");\n      }\n\n      this.setState({\n        vitaminCTotal: varTotal\n      });\n    };\n\n    this.vitaminDBtn = () => {\n      if (this.state.currentInput.length === 0) {\n        alert(\" ENTER SOMETHING, YOU FOOL! \");\n        return;\n      }\n\n      if (!Number.isInteger(parseInt(this.state.currentInput))) {\n        alert(\"INVALID INPUT, YOU IMBECILE. NUMBERS ONLYS\");\n        return;\n      }\n\n      var newArray = this.state.userInputs;\n      var varTotal = 0;\n      newArray.push(parseInt(this.state.currentInput));\n      this.setState({\n        currentInput: \"\",\n        userInputs: newArray\n      });\n\n      for (let i = 0; i < newArray.length; i++) {\n        varTotal += parseInt(newArray[i]);\n      }\n\n      if (varTotal > 2000) {\n        alert(\"waNnA DiE?\");\n      }\n\n      this.setState({\n        vitaminDTotal: varTotal\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Vitamins, {\n      submitBtn: this.submitBtn,\n      getInputValue: this.getInputValue,\n      vitaminC: this.state.vitaminCTotal,\n      vitaminD: this.state.vitaminDTotal,\n      vitaminDBtn: this.vitaminDBtn,\n      vitaminE: this.state.vitaminETotal,\n      currentInput: this.state.currentInput,\n      vitaminDInput: this.state.vitaminDInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ju/Desktop/vitaminApp/src/App.js"],"names":["React","Component","Vitamins","Menu","App","state","vitaminCTotal","vitaminDTotal","vitaminETotal","userInputs","currentInput","vitaminDInput","getInputValue","event","inputTotal","target","value","console","log","setState","submitBtn","length","alert","Number","isInteger","parseInt","newArray","varTotal","push","i","vitaminDBtn","render"],"mappings":"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","sourcesContent":["// DEPENDENCIES\nimport React, { Component } from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// MY FILES\nimport Vitamins from './Components/MyPortfolio/MyPortfolio';\nimport Menu from './Components/Menu/Menu';\n\nclass App extends Component {\n  state = {\n    vitaminCTotal : 0,\n    vitaminDTotal : 0,\n    vitaminETotal : 0,\n    userInputs:[],\n    currentInput:\"\",\n    vitaminDInput:\"\"\n  }\n\n  getInputValue = (event) => {\n    const inputTotal = event.target.value\n    const vitaminDTotal = event.target.value\n    console.log(inputTotal)\n\n    this.setState({\n      currentInput: inputTotal,\n      //vitaminDTotal: vitaminDTotal\n    })\n  }\n// VITAMIN C BUTTON =================================================\n  submitBtn = () => { \n  // if user does not input anything, alert them\n    if (this.state.currentInput.length === 0) {\n      alert(\" ENTER SOMETHING, YOU FOOL! \")\n      return;\n    }\n  // if user enters something that is not a number, alert them\n    if (!Number.isInteger(parseInt(this.state.currentInput))) {\n      alert(\"INVALID INPUT, YOU IMBECILE. NUMBERS ONLYS\")\n      return;\n    }\n\n  var newArray = this.state.userInputs;\n  var varTotal = 0;\n\n  newArray.push(parseInt(this.state.currentInput));\n  this.setState({\n    currentInput:\"\",\n    vitaminDInput:\"\",\n    userInputs:newArray\n  });\n\n  for (let i = 0; i < newArray.length; i++) {\n    varTotal += parseInt(newArray[i]);      \n  }\n  if (varTotal > 2000) {\n    alert (\"waNnA DiE?\")\n  } \n  this.setState({\n    vitaminCTotal:varTotal\n  }) \n}\n//===============================================================\n// VITAMIN D =================================================\n  vitaminDBtn = () => { \n    if (this.state.currentInput.length === 0) {\n      alert(\" ENTER SOMETHING, YOU FOOL! \")\n      return;\n    }\n    if (!Number.isInteger(parseInt(this.state.currentInput))) {\n      alert(\"INVALID INPUT, YOU IMBECILE. NUMBERS ONLYS\")\n      return;\n    }\n\n  var newArray = this.state.userInputs;\n  var varTotal = 0;\n\n  newArray.push(parseInt(this.state.currentInput));\n  this.setState({\n    currentInput:\"\",\n    userInputs:newArray\n  });\n\n  for (let i = 0; i < newArray.length; i++) {\n    varTotal += parseInt(newArray[i]);      \n  }\n  if (varTotal > 2000) {\n    alert (\"waNnA DiE?\")\n  } \n  this.setState({\n    vitaminDTotal:varTotal\n  }) \n}\n\n\nrender() {\n  return (\n    <div>\n    <Menu />\n    <br></br>\n    <Vitamins \n      submitBtn = {this.submitBtn}\n      getInputValue ={this.getInputValue}\n      vitaminC = {this.state.vitaminCTotal}\n      vitaminD = {this.state.vitaminDTotal}\n      vitaminDBtn = {this.vitaminDBtn}\n      vitaminE = {this.state.vitaminETotal}\n      currentInput = {this.state.currentInput}\n      vitaminDInput = {this.state.vitaminDInput}\n    />\n    </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}